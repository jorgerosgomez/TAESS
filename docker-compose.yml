version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8081:80"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      DATABASE_HOST: db
      DATABASE_USER: root 
      DATABASE_PASSWORD: root
      DATABASE_NAME: myappdb
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: mysql:5.7
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: myappdb
      MYSQL_ROOT_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "1500:3306"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "9000:80"
    depends_on:
      - db
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
